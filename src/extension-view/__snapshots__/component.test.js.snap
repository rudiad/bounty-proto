// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ExtensionView /> component mode views renders component view when in component mode 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionView
    deleteViewHandler={[Function]}
    extension={
        Object {
            "authorName": "test",
            "channelId": "channelId",
            "description": "description",
            "iconUrl": "icon_url",
            "id": "id",
            "name": "name",
            "requestIdentity": false,
            "sku": "sku",
            "state": "state",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "viewerUrl": "test",
                "zoom": false,
              },
              "config": Object {
                "viewerUrl": "test",
              },
              "liveConfig": Object {
                "viewerUrl": "test",
              },
              "panel": Object {
                "viewerUrl": "test",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameSize={
        Object {
            "height": 0,
            "width": 0,
          }
    }
    id="0"
    linked={false}
    mode="viewer"
    openEditViewHandler={[Function]}
    position={
        Object {
            "x": 0,
            "y": 0,
          }
    }
    role="Broadcaster"
    type="component"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="view__header"
>
          <div
                    className="view__descriptor"
          >
                    Broadcaster
          </div>
          <div
                    className="view__descriptor"
          />
</div>,
        <ExtensionComponentView
          className="view"
          extension={
                    Object {
                              "authorName": "test",
                              "channelId": "channelId",
                              "description": "description",
                              "iconUrl": "icon_url",
                              "id": "id",
                              "name": "name",
                              "requestIdentity": false,
                              "sku": "sku",
                              "state": "state",
                              "summary": "summary",
                              "token": "token",
                              "vendorCode": "vendorCode",
                              "version": "0.1",
                              "views": Object {
                                "component": Object {
                                  "aspectHeight": 3000,
                                  "aspectWidth": 2500,
                                  "viewerUrl": "test",
                                  "zoom": false,
                                },
                                "config": Object {
                                  "viewerUrl": "test",
                                },
                                "liveConfig": Object {
                                  "viewerUrl": "test",
                                },
                                "panel": Object {
                                  "viewerUrl": "test",
                                },
                              },
                              "whitelistedConfigUrls": Array [
                                "foo",
                              ],
                              "whitelistedPanelUrls": Array [
                                "bar",
                              ],
                            }
          }
          frameId="frameid-0"
          frameSize={
                    Object {
                              "height": 0,
                              "width": 0,
                            }
          }
          id="component-0"
          position={
                    Object {
                              "x": 0,
                              "y": 0,
                            }
          }
/>,
        false,
        false,
      ],
      "className": "view__wrapper",
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "style": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            <div
              className="view__descriptor"
>
              Broadcaster
</div>,
            <div
              className="view__descriptor"
/>,
          ],
          "className": "view__header",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Broadcaster",
              "className": "view__descriptor",
            },
            "ref": null,
            "rendered": "Broadcaster",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "view__descriptor",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "className": "view",
          "extension": Object {
            "authorName": "test",
            "channelId": "channelId",
            "description": "description",
            "iconUrl": "icon_url",
            "id": "id",
            "name": "name",
            "requestIdentity": false,
            "sku": "sku",
            "state": "state",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "viewerUrl": "test",
                "zoom": false,
              },
              "config": Object {
                "viewerUrl": "test",
              },
              "liveConfig": Object {
                "viewerUrl": "test",
              },
              "panel": Object {
                "viewerUrl": "test",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          },
          "frameId": "frameid-0",
          "frameSize": Object {
            "height": 0,
            "width": 0,
          },
          "id": "component-0",
          "position": Object {
            "x": 0,
            "y": 0,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      false,
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="view__header"
>
            <div
                        className="view__descriptor"
            >
                        Broadcaster
            </div>
            <div
                        className="view__descriptor"
            />
</div>,
          <ExtensionComponentView
            className="view"
            extension={
                        Object {
                                    "authorName": "test",
                                    "channelId": "channelId",
                                    "description": "description",
                                    "iconUrl": "icon_url",
                                    "id": "id",
                                    "name": "name",
                                    "requestIdentity": false,
                                    "sku": "sku",
                                    "state": "state",
                                    "summary": "summary",
                                    "token": "token",
                                    "vendorCode": "vendorCode",
                                    "version": "0.1",
                                    "views": Object {
                                      "component": Object {
                                        "aspectHeight": 3000,
                                        "aspectWidth": 2500,
                                        "viewerUrl": "test",
                                        "zoom": false,
                                      },
                                      "config": Object {
                                        "viewerUrl": "test",
                                      },
                                      "liveConfig": Object {
                                        "viewerUrl": "test",
                                      },
                                      "panel": Object {
                                        "viewerUrl": "test",
                                      },
                                    },
                                    "whitelistedConfigUrls": Array [
                                      "foo",
                                    ],
                                    "whitelistedPanelUrls": Array [
                                      "bar",
                                    ],
                                  }
            }
            frameId="frameid-0"
            frameSize={
                        Object {
                                    "height": 0,
                                    "width": 0,
                                  }
            }
            id="component-0"
            position={
                        Object {
                                    "x": 0,
                                    "y": 0,
                                  }
            }
/>,
          false,
          false,
        ],
        "className": "view__wrapper",
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "style": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <div
                className="view__descriptor"
>
                Broadcaster
</div>,
              <div
                className="view__descriptor"
/>,
            ],
            "className": "view__header",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Broadcaster",
                "className": "view__descriptor",
              },
              "ref": null,
              "rendered": "Broadcaster",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "view__descriptor",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "view",
            "extension": Object {
              "authorName": "test",
              "channelId": "channelId",
              "description": "description",
              "iconUrl": "icon_url",
              "id": "id",
              "name": "name",
              "requestIdentity": false,
              "sku": "sku",
              "state": "state",
              "summary": "summary",
              "token": "token",
              "vendorCode": "vendorCode",
              "version": "0.1",
              "views": Object {
                "component": Object {
                  "aspectHeight": 3000,
                  "aspectWidth": 2500,
                  "viewerUrl": "test",
                  "zoom": false,
                },
                "config": Object {
                  "viewerUrl": "test",
                },
                "liveConfig": Object {
                  "viewerUrl": "test",
                },
                "panel": Object {
                  "viewerUrl": "test",
                },
              },
              "whitelistedConfigUrls": Array [
                "foo",
              ],
              "whitelistedPanelUrls": Array [
                "bar",
              ],
            },
            "frameId": "frameid-0",
            "frameSize": Object {
              "height": 0,
              "width": 0,
            },
            "id": "component-0",
            "position": Object {
              "x": 0,
              "y": 0,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionView /> config mode views renders correctly when in config mode 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionView
    deleteViewHandler={[Function]}
    extension={
        Object {
            "authorName": "test",
            "channelId": "channelId",
            "description": "description",
            "iconUrl": "icon_url",
            "id": "id",
            "name": "name",
            "requestIdentity": false,
            "sku": "sku",
            "state": "state",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "viewerUrl": "test",
                "zoom": false,
              },
              "config": Object {
                "viewerUrl": "test",
              },
              "liveConfig": Object {
                "viewerUrl": "test",
              },
              "panel": Object {
                "viewerUrl": "test",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameSize={
        Object {
            "height": 0,
            "width": 0,
          }
    }
    id="0"
    linked={false}
    mode="viewer"
    openEditViewHandler={[Function]}
    position={
        Object {
            "x": 0,
            "y": 0,
          }
    }
    role="Broadcaster"
    type="config"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="view__header"
>
          <div
                    className="view__descriptor"
          >
                    Broadcaster
          </div>
          <div
                    className="view__descriptor"
          />
</div>,
        false,
        false,
        false,
      ],
      "className": "view__wrapper",
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "style": Object {
        "height": "70vh",
        "overflow": "auto",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            <div
              className="view__descriptor"
>
              Broadcaster
</div>,
            <div
              className="view__descriptor"
/>,
          ],
          "className": "view__header",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Broadcaster",
              "className": "view__descriptor",
            },
            "ref": null,
            "rendered": "Broadcaster",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "view__descriptor",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": "div",
      },
      false,
      false,
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="view__header"
>
            <div
                        className="view__descriptor"
            >
                        Broadcaster
            </div>
            <div
                        className="view__descriptor"
            />
</div>,
          false,
          false,
          false,
        ],
        "className": "view__wrapper",
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "style": Object {
          "height": "70vh",
          "overflow": "auto",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <div
                className="view__descriptor"
>
                Broadcaster
</div>,
              <div
                className="view__descriptor"
/>,
            ],
            "className": "view__header",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Broadcaster",
                "className": "view__descriptor",
              },
              "ref": null,
              "rendered": "Broadcaster",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "view__descriptor",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
          ],
          "type": "div",
        },
        false,
        false,
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionView /> live config mode views renders correctly when in config mode 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionView
    deleteViewHandler={[Function]}
    extension={
        Object {
            "authorName": "test",
            "channelId": "channelId",
            "description": "description",
            "iconUrl": "icon_url",
            "id": "id",
            "name": "name",
            "requestIdentity": false,
            "sku": "sku",
            "state": "state",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "viewerUrl": "test",
                "zoom": false,
              },
              "config": Object {
                "viewerUrl": "test",
              },
              "liveConfig": Object {
                "viewerUrl": "test",
              },
              "panel": Object {
                "viewerUrl": "test",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameSize={
        Object {
            "height": 0,
            "width": 0,
          }
    }
    id="0"
    linked={false}
    mode="viewer"
    openEditViewHandler={[Function]}
    position={
        Object {
            "x": 0,
            "y": 0,
          }
    }
    role="Broadcaster"
    type="liveConfig"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="view__header"
>
          <div
                    className="view__descriptor"
          >
                    Broadcaster
          </div>
          <div
                    className="view__descriptor"
          />
</div>,
        false,
        false,
        false,
      ],
      "className": "view__wrapper",
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "style": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            <div
              className="view__descriptor"
>
              Broadcaster
</div>,
            <div
              className="view__descriptor"
/>,
          ],
          "className": "view__header",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Broadcaster",
              "className": "view__descriptor",
            },
            "ref": null,
            "rendered": "Broadcaster",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "view__descriptor",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": "div",
      },
      false,
      false,
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="view__header"
>
            <div
                        className="view__descriptor"
            >
                        Broadcaster
            </div>
            <div
                        className="view__descriptor"
            />
</div>,
          false,
          false,
          false,
        ],
        "className": "view__wrapper",
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "style": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <div
                className="view__descriptor"
>
                Broadcaster
</div>,
              <div
                className="view__descriptor"
/>,
            ],
            "className": "view__header",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Broadcaster",
                "className": "view__descriptor",
              },
              "ref": null,
              "rendered": "Broadcaster",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "view__descriptor",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
          ],
          "type": "div",
        },
        false,
        false,
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionView /> overlay mode views renders correctly in overlay mode as a Broadcaster 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionView
    deleteViewHandler={[Function]}
    extension={
        Object {
            "authorName": "test",
            "channelId": "channelId",
            "description": "description",
            "iconUrl": "icon_url",
            "id": "id",
            "name": "name",
            "requestIdentity": false,
            "sku": "sku",
            "state": "state",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "viewerUrl": "test",
                "zoom": false,
              },
              "config": Object {
                "viewerUrl": "test",
              },
              "liveConfig": Object {
                "viewerUrl": "test",
              },
              "panel": Object {
                "viewerUrl": "test",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameSize={
        Object {
            "height": "1px",
            "width": "1px",
          }
    }
    id="0"
    linked={false}
    mode="viewer"
    openEditViewHandler={[Function]}
    position={
        Object {
            "x": 0,
            "y": 0,
          }
    }
    role="Broadcaster"
    type="video_overlay"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="view__header"
>
          <div
                    className="view__descriptor"
          >
                    Broadcaster
          </div>
          <div
                    className="view__descriptor"
          />
</div>,
        false,
        false,
        <div
          className="view"
          style={
                    Object {
                              "height": "1pxpx",
                              "width": "1pxpx",
                            }
          }
>
          <ExtensionFrame
                    className="view"
                    extension={
                              Object {
                                        "authorName": "test",
                                        "channelId": "channelId",
                                        "description": "description",
                                        "iconUrl": "icon_url",
                                        "id": "id",
                                        "name": "name",
                                        "requestIdentity": false,
                                        "sku": "sku",
                                        "state": "state",
                                        "summary": "summary",
                                        "token": "token",
                                        "vendorCode": "vendorCode",
                                        "version": "0.1",
                                        "views": Object {
                                          "component": Object {
                                            "aspectHeight": 3000,
                                            "aspectWidth": 2500,
                                            "viewerUrl": "test",
                                            "zoom": false,
                                          },
                                          "config": Object {
                                            "viewerUrl": "test",
                                          },
                                          "liveConfig": Object {
                                            "viewerUrl": "test",
                                          },
                                          "panel": Object {
                                            "viewerUrl": "test",
                                          },
                                        },
                                        "whitelistedConfigUrls": Array [
                                          "foo",
                                        ],
                                        "whitelistedPanelUrls": Array [
                                          "bar",
                                        ],
                                      }
                    }
                    frameId="frameid-0"
                    mode="viewer"
                    type="video_overlay"
          />
</div>,
      ],
      "className": "view__wrapper",
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "style": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            <div
              className="view__descriptor"
>
              Broadcaster
</div>,
            <div
              className="view__descriptor"
/>,
          ],
          "className": "view__header",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Broadcaster",
              "className": "view__descriptor",
            },
            "ref": null,
            "rendered": "Broadcaster",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "view__descriptor",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": "div",
      },
      false,
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ExtensionFrame
            className="view"
            extension={
                        Object {
                                    "authorName": "test",
                                    "channelId": "channelId",
                                    "description": "description",
                                    "iconUrl": "icon_url",
                                    "id": "id",
                                    "name": "name",
                                    "requestIdentity": false,
                                    "sku": "sku",
                                    "state": "state",
                                    "summary": "summary",
                                    "token": "token",
                                    "vendorCode": "vendorCode",
                                    "version": "0.1",
                                    "views": Object {
                                      "component": Object {
                                        "aspectHeight": 3000,
                                        "aspectWidth": 2500,
                                        "viewerUrl": "test",
                                        "zoom": false,
                                      },
                                      "config": Object {
                                        "viewerUrl": "test",
                                      },
                                      "liveConfig": Object {
                                        "viewerUrl": "test",
                                      },
                                      "panel": Object {
                                        "viewerUrl": "test",
                                      },
                                    },
                                    "whitelistedConfigUrls": Array [
                                      "foo",
                                    ],
                                    "whitelistedPanelUrls": Array [
                                      "bar",
                                    ],
                                  }
            }
            frameId="frameid-0"
            mode="viewer"
            type="video_overlay"
/>,
          "className": "view",
          "style": Object {
            "height": "1pxpx",
            "width": "1pxpx",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "view",
            "extension": Object {
              "authorName": "test",
              "channelId": "channelId",
              "description": "description",
              "iconUrl": "icon_url",
              "id": "id",
              "name": "name",
              "requestIdentity": false,
              "sku": "sku",
              "state": "state",
              "summary": "summary",
              "token": "token",
              "vendorCode": "vendorCode",
              "version": "0.1",
              "views": Object {
                "component": Object {
                  "aspectHeight": 3000,
                  "aspectWidth": 2500,
                  "viewerUrl": "test",
                  "zoom": false,
                },
                "config": Object {
                  "viewerUrl": "test",
                },
                "liveConfig": Object {
                  "viewerUrl": "test",
                },
                "panel": Object {
                  "viewerUrl": "test",
                },
              },
              "whitelistedConfigUrls": Array [
                "foo",
              ],
              "whitelistedPanelUrls": Array [
                "bar",
              ],
            },
            "frameId": "frameid-0",
            "mode": "viewer",
            "type": "video_overlay",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="view__header"
>
            <div
                        className="view__descriptor"
            >
                        Broadcaster
            </div>
            <div
                        className="view__descriptor"
            />
</div>,
          false,
          false,
          <div
            className="view"
            style={
                        Object {
                                    "height": "1pxpx",
                                    "width": "1pxpx",
                                  }
            }
>
            <ExtensionFrame
                        className="view"
                        extension={
                                    Object {
                                                "authorName": "test",
                                                "channelId": "channelId",
                                                "description": "description",
                                                "iconUrl": "icon_url",
                                                "id": "id",
                                                "name": "name",
                                                "requestIdentity": false,
                                                "sku": "sku",
                                                "state": "state",
                                                "summary": "summary",
                                                "token": "token",
                                                "vendorCode": "vendorCode",
                                                "version": "0.1",
                                                "views": Object {
                                                  "component": Object {
                                                    "aspectHeight": 3000,
                                                    "aspectWidth": 2500,
                                                    "viewerUrl": "test",
                                                    "zoom": false,
                                                  },
                                                  "config": Object {
                                                    "viewerUrl": "test",
                                                  },
                                                  "liveConfig": Object {
                                                    "viewerUrl": "test",
                                                  },
                                                  "panel": Object {
                                                    "viewerUrl": "test",
                                                  },
                                                },
                                                "whitelistedConfigUrls": Array [
                                                  "foo",
                                                ],
                                                "whitelistedPanelUrls": Array [
                                                  "bar",
                                                ],
                                              }
                        }
                        frameId="frameid-0"
                        mode="viewer"
                        type="video_overlay"
            />
</div>,
        ],
        "className": "view__wrapper",
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "style": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <div
                className="view__descriptor"
>
                Broadcaster
</div>,
              <div
                className="view__descriptor"
/>,
            ],
            "className": "view__header",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Broadcaster",
                "className": "view__descriptor",
              },
              "ref": null,
              "rendered": "Broadcaster",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "view__descriptor",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
          ],
          "type": "div",
        },
        false,
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ExtensionFrame
              className="view"
              extension={
                            Object {
                                          "authorName": "test",
                                          "channelId": "channelId",
                                          "description": "description",
                                          "iconUrl": "icon_url",
                                          "id": "id",
                                          "name": "name",
                                          "requestIdentity": false,
                                          "sku": "sku",
                                          "state": "state",
                                          "summary": "summary",
                                          "token": "token",
                                          "vendorCode": "vendorCode",
                                          "version": "0.1",
                                          "views": Object {
                                            "component": Object {
                                              "aspectHeight": 3000,
                                              "aspectWidth": 2500,
                                              "viewerUrl": "test",
                                              "zoom": false,
                                            },
                                            "config": Object {
                                              "viewerUrl": "test",
                                            },
                                            "liveConfig": Object {
                                              "viewerUrl": "test",
                                            },
                                            "panel": Object {
                                              "viewerUrl": "test",
                                            },
                                          },
                                          "whitelistedConfigUrls": Array [
                                            "foo",
                                          ],
                                          "whitelistedPanelUrls": Array [
                                            "bar",
                                          ],
                                        }
              }
              frameId="frameid-0"
              mode="viewer"
              type="video_overlay"
/>,
            "className": "view",
            "style": Object {
              "height": "1pxpx",
              "width": "1pxpx",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "view",
              "extension": Object {
                "authorName": "test",
                "channelId": "channelId",
                "description": "description",
                "iconUrl": "icon_url",
                "id": "id",
                "name": "name",
                "requestIdentity": false,
                "sku": "sku",
                "state": "state",
                "summary": "summary",
                "token": "token",
                "vendorCode": "vendorCode",
                "version": "0.1",
                "views": Object {
                  "component": Object {
                    "aspectHeight": 3000,
                    "aspectWidth": 2500,
                    "viewerUrl": "test",
                    "zoom": false,
                  },
                  "config": Object {
                    "viewerUrl": "test",
                  },
                  "liveConfig": Object {
                    "viewerUrl": "test",
                  },
                  "panel": Object {
                    "viewerUrl": "test",
                  },
                },
                "whitelistedConfigUrls": Array [
                  "foo",
                ],
                "whitelistedPanelUrls": Array [
                  "bar",
                ],
              },
              "frameId": "frameid-0",
              "mode": "viewer",
              "type": "video_overlay",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionView /> overlay mode views renders correctly when in overlay mode as a Logged In and Linked Viewer 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionView
    deleteViewHandler={[Function]}
    extension={
        Object {
            "authorName": "test",
            "channelId": "channelId",
            "description": "description",
            "iconUrl": "icon_url",
            "id": "id",
            "name": "name",
            "requestIdentity": false,
            "sku": "sku",
            "state": "state",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "viewerUrl": "test",
                "zoom": false,
              },
              "config": Object {
                "viewerUrl": "test",
              },
              "liveConfig": Object {
                "viewerUrl": "test",
              },
              "panel": Object {
                "viewerUrl": "test",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameSize={
        Object {
            "height": "1px",
            "width": "1px",
          }
    }
    id="0"
    linked={true}
    mode="viewer"
    openEditViewHandler={[Function]}
    position={
        Object {
            "x": 0,
            "y": 0,
          }
    }
    role="Logged-In Viewer"
    type="panel"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="view__header"
>
          <div
                    className="view__descriptor"
          >
                    Logged-In Viewer
          </div>
          <div
                    className="view__descriptor"
          >
                    Linked
          </div>
</div>,
        false,
        false,
        <div
          className="view"
          style={
                    Object {
                              "height": "150pxpx",
                              "width": "320pxpx",
                            }
          }
>
          <ExtensionFrame
                    className="view"
                    extension={
                              Object {
                                        "authorName": "test",
                                        "channelId": "channelId",
                                        "description": "description",
                                        "iconUrl": "icon_url",
                                        "id": "id",
                                        "name": "name",
                                        "requestIdentity": false,
                                        "sku": "sku",
                                        "state": "state",
                                        "summary": "summary",
                                        "token": "token",
                                        "vendorCode": "vendorCode",
                                        "version": "0.1",
                                        "views": Object {
                                          "component": Object {
                                            "aspectHeight": 3000,
                                            "aspectWidth": 2500,
                                            "viewerUrl": "test",
                                            "zoom": false,
                                          },
                                          "config": Object {
                                            "viewerUrl": "test",
                                          },
                                          "liveConfig": Object {
                                            "viewerUrl": "test",
                                          },
                                          "panel": Object {
                                            "viewerUrl": "test",
                                          },
                                        },
                                        "whitelistedConfigUrls": Array [
                                          "foo",
                                        ],
                                        "whitelistedPanelUrls": Array [
                                          "bar",
                                        ],
                                      }
                    }
                    frameId="frameid-0"
                    mode="viewer"
                    type="panel"
          />
</div>,
      ],
      "className": "view__wrapper",
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "style": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            <div
              className="view__descriptor"
>
              Logged-In Viewer
</div>,
            <div
              className="view__descriptor"
>
              Linked
</div>,
          ],
          "className": "view__header",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Logged-In Viewer",
              "className": "view__descriptor",
            },
            "ref": null,
            "rendered": "Logged-In Viewer",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Linked",
              "className": "view__descriptor",
            },
            "ref": null,
            "rendered": "Linked",
            "type": "div",
          },
        ],
        "type": "div",
      },
      false,
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ExtensionFrame
            className="view"
            extension={
                        Object {
                                    "authorName": "test",
                                    "channelId": "channelId",
                                    "description": "description",
                                    "iconUrl": "icon_url",
                                    "id": "id",
                                    "name": "name",
                                    "requestIdentity": false,
                                    "sku": "sku",
                                    "state": "state",
                                    "summary": "summary",
                                    "token": "token",
                                    "vendorCode": "vendorCode",
                                    "version": "0.1",
                                    "views": Object {
                                      "component": Object {
                                        "aspectHeight": 3000,
                                        "aspectWidth": 2500,
                                        "viewerUrl": "test",
                                        "zoom": false,
                                      },
                                      "config": Object {
                                        "viewerUrl": "test",
                                      },
                                      "liveConfig": Object {
                                        "viewerUrl": "test",
                                      },
                                      "panel": Object {
                                        "viewerUrl": "test",
                                      },
                                    },
                                    "whitelistedConfigUrls": Array [
                                      "foo",
                                    ],
                                    "whitelistedPanelUrls": Array [
                                      "bar",
                                    ],
                                  }
            }
            frameId="frameid-0"
            mode="viewer"
            type="panel"
/>,
          "className": "view",
          "style": Object {
            "height": "150pxpx",
            "width": "320pxpx",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "view",
            "extension": Object {
              "authorName": "test",
              "channelId": "channelId",
              "description": "description",
              "iconUrl": "icon_url",
              "id": "id",
              "name": "name",
              "requestIdentity": false,
              "sku": "sku",
              "state": "state",
              "summary": "summary",
              "token": "token",
              "vendorCode": "vendorCode",
              "version": "0.1",
              "views": Object {
                "component": Object {
                  "aspectHeight": 3000,
                  "aspectWidth": 2500,
                  "viewerUrl": "test",
                  "zoom": false,
                },
                "config": Object {
                  "viewerUrl": "test",
                },
                "liveConfig": Object {
                  "viewerUrl": "test",
                },
                "panel": Object {
                  "viewerUrl": "test",
                },
              },
              "whitelistedConfigUrls": Array [
                "foo",
              ],
              "whitelistedPanelUrls": Array [
                "bar",
              ],
            },
            "frameId": "frameid-0",
            "mode": "viewer",
            "type": "panel",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="view__header"
>
            <div
                        className="view__descriptor"
            >
                        Logged-In Viewer
            </div>
            <div
                        className="view__descriptor"
            >
                        Linked
            </div>
</div>,
          false,
          false,
          <div
            className="view"
            style={
                        Object {
                                    "height": "150pxpx",
                                    "width": "320pxpx",
                                  }
            }
>
            <ExtensionFrame
                        className="view"
                        extension={
                                    Object {
                                                "authorName": "test",
                                                "channelId": "channelId",
                                                "description": "description",
                                                "iconUrl": "icon_url",
                                                "id": "id",
                                                "name": "name",
                                                "requestIdentity": false,
                                                "sku": "sku",
                                                "state": "state",
                                                "summary": "summary",
                                                "token": "token",
                                                "vendorCode": "vendorCode",
                                                "version": "0.1",
                                                "views": Object {
                                                  "component": Object {
                                                    "aspectHeight": 3000,
                                                    "aspectWidth": 2500,
                                                    "viewerUrl": "test",
                                                    "zoom": false,
                                                  },
                                                  "config": Object {
                                                    "viewerUrl": "test",
                                                  },
                                                  "liveConfig": Object {
                                                    "viewerUrl": "test",
                                                  },
                                                  "panel": Object {
                                                    "viewerUrl": "test",
                                                  },
                                                },
                                                "whitelistedConfigUrls": Array [
                                                  "foo",
                                                ],
                                                "whitelistedPanelUrls": Array [
                                                  "bar",
                                                ],
                                              }
                        }
                        frameId="frameid-0"
                        mode="viewer"
                        type="panel"
            />
</div>,
        ],
        "className": "view__wrapper",
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "style": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <div
                className="view__descriptor"
>
                Logged-In Viewer
</div>,
              <div
                className="view__descriptor"
>
                Linked
</div>,
            ],
            "className": "view__header",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Logged-In Viewer",
                "className": "view__descriptor",
              },
              "ref": null,
              "rendered": "Logged-In Viewer",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Linked",
                "className": "view__descriptor",
              },
              "ref": null,
              "rendered": "Linked",
              "type": "div",
            },
          ],
          "type": "div",
        },
        false,
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ExtensionFrame
              className="view"
              extension={
                            Object {
                                          "authorName": "test",
                                          "channelId": "channelId",
                                          "description": "description",
                                          "iconUrl": "icon_url",
                                          "id": "id",
                                          "name": "name",
                                          "requestIdentity": false,
                                          "sku": "sku",
                                          "state": "state",
                                          "summary": "summary",
                                          "token": "token",
                                          "vendorCode": "vendorCode",
                                          "version": "0.1",
                                          "views": Object {
                                            "component": Object {
                                              "aspectHeight": 3000,
                                              "aspectWidth": 2500,
                                              "viewerUrl": "test",
                                              "zoom": false,
                                            },
                                            "config": Object {
                                              "viewerUrl": "test",
                                            },
                                            "liveConfig": Object {
                                              "viewerUrl": "test",
                                            },
                                            "panel": Object {
                                              "viewerUrl": "test",
                                            },
                                          },
                                          "whitelistedConfigUrls": Array [
                                            "foo",
                                          ],
                                          "whitelistedPanelUrls": Array [
                                            "bar",
                                          ],
                                        }
              }
              frameId="frameid-0"
              mode="viewer"
              type="panel"
/>,
            "className": "view",
            "style": Object {
              "height": "150pxpx",
              "width": "320pxpx",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "view",
              "extension": Object {
                "authorName": "test",
                "channelId": "channelId",
                "description": "description",
                "iconUrl": "icon_url",
                "id": "id",
                "name": "name",
                "requestIdentity": false,
                "sku": "sku",
                "state": "state",
                "summary": "summary",
                "token": "token",
                "vendorCode": "vendorCode",
                "version": "0.1",
                "views": Object {
                  "component": Object {
                    "aspectHeight": 3000,
                    "aspectWidth": 2500,
                    "viewerUrl": "test",
                    "zoom": false,
                  },
                  "config": Object {
                    "viewerUrl": "test",
                  },
                  "liveConfig": Object {
                    "viewerUrl": "test",
                  },
                  "panel": Object {
                    "viewerUrl": "test",
                  },
                },
                "whitelistedConfigUrls": Array [
                  "foo",
                ],
                "whitelistedPanelUrls": Array [
                  "bar",
                ],
              },
              "frameId": "frameid-0",
              "mode": "viewer",
              "type": "panel",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionView /> overlay mode views renders correctly when in overlay mode as a Logged In and Unlinked Viewer 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionView
    deleteViewHandler={[Function]}
    extension={
        Object {
            "authorName": "test",
            "channelId": "channelId",
            "description": "description",
            "iconUrl": "icon_url",
            "id": "id",
            "name": "name",
            "requestIdentity": false,
            "sku": "sku",
            "state": "state",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "viewerUrl": "test",
                "zoom": false,
              },
              "config": Object {
                "viewerUrl": "test",
              },
              "liveConfig": Object {
                "viewerUrl": "test",
              },
              "panel": Object {
                "viewerUrl": "test",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameSize={
        Object {
            "height": "1px",
            "width": "1px",
          }
    }
    id="0"
    linked={false}
    mode="viewer"
    openEditViewHandler={[Function]}
    position={
        Object {
            "x": 0,
            "y": 0,
          }
    }
    role="Logged-In Viewer"
    type="panel"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="view__header"
>
          <div
                    className="view__descriptor"
          >
                    Logged-In Viewer
          </div>
          <div
                    className="view__descriptor"
          >
                    Unlinked
          </div>
</div>,
        false,
        false,
        <div
          className="view"
          style={
                    Object {
                              "height": "150pxpx",
                              "width": "320pxpx",
                            }
          }
>
          <ExtensionFrame
                    className="view"
                    extension={
                              Object {
                                        "authorName": "test",
                                        "channelId": "channelId",
                                        "description": "description",
                                        "iconUrl": "icon_url",
                                        "id": "id",
                                        "name": "name",
                                        "requestIdentity": false,
                                        "sku": "sku",
                                        "state": "state",
                                        "summary": "summary",
                                        "token": "token",
                                        "vendorCode": "vendorCode",
                                        "version": "0.1",
                                        "views": Object {
                                          "component": Object {
                                            "aspectHeight": 3000,
                                            "aspectWidth": 2500,
                                            "viewerUrl": "test",
                                            "zoom": false,
                                          },
                                          "config": Object {
                                            "viewerUrl": "test",
                                          },
                                          "liveConfig": Object {
                                            "viewerUrl": "test",
                                          },
                                          "panel": Object {
                                            "viewerUrl": "test",
                                          },
                                        },
                                        "whitelistedConfigUrls": Array [
                                          "foo",
                                        ],
                                        "whitelistedPanelUrls": Array [
                                          "bar",
                                        ],
                                      }
                    }
                    frameId="frameid-0"
                    mode="viewer"
                    type="panel"
          />
</div>,
      ],
      "className": "view__wrapper",
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "style": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            <div
              className="view__descriptor"
>
              Logged-In Viewer
</div>,
            <div
              className="view__descriptor"
>
              Unlinked
</div>,
          ],
          "className": "view__header",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Logged-In Viewer",
              "className": "view__descriptor",
            },
            "ref": null,
            "rendered": "Logged-In Viewer",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Unlinked",
              "className": "view__descriptor",
            },
            "ref": null,
            "rendered": "Unlinked",
            "type": "div",
          },
        ],
        "type": "div",
      },
      false,
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ExtensionFrame
            className="view"
            extension={
                        Object {
                                    "authorName": "test",
                                    "channelId": "channelId",
                                    "description": "description",
                                    "iconUrl": "icon_url",
                                    "id": "id",
                                    "name": "name",
                                    "requestIdentity": false,
                                    "sku": "sku",
                                    "state": "state",
                                    "summary": "summary",
                                    "token": "token",
                                    "vendorCode": "vendorCode",
                                    "version": "0.1",
                                    "views": Object {
                                      "component": Object {
                                        "aspectHeight": 3000,
                                        "aspectWidth": 2500,
                                        "viewerUrl": "test",
                                        "zoom": false,
                                      },
                                      "config": Object {
                                        "viewerUrl": "test",
                                      },
                                      "liveConfig": Object {
                                        "viewerUrl": "test",
                                      },
                                      "panel": Object {
                                        "viewerUrl": "test",
                                      },
                                    },
                                    "whitelistedConfigUrls": Array [
                                      "foo",
                                    ],
                                    "whitelistedPanelUrls": Array [
                                      "bar",
                                    ],
                                  }
            }
            frameId="frameid-0"
            mode="viewer"
            type="panel"
/>,
          "className": "view",
          "style": Object {
            "height": "150pxpx",
            "width": "320pxpx",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "view",
            "extension": Object {
              "authorName": "test",
              "channelId": "channelId",
              "description": "description",
              "iconUrl": "icon_url",
              "id": "id",
              "name": "name",
              "requestIdentity": false,
              "sku": "sku",
              "state": "state",
              "summary": "summary",
              "token": "token",
              "vendorCode": "vendorCode",
              "version": "0.1",
              "views": Object {
                "component": Object {
                  "aspectHeight": 3000,
                  "aspectWidth": 2500,
                  "viewerUrl": "test",
                  "zoom": false,
                },
                "config": Object {
                  "viewerUrl": "test",
                },
                "liveConfig": Object {
                  "viewerUrl": "test",
                },
                "panel": Object {
                  "viewerUrl": "test",
                },
              },
              "whitelistedConfigUrls": Array [
                "foo",
              ],
              "whitelistedPanelUrls": Array [
                "bar",
              ],
            },
            "frameId": "frameid-0",
            "mode": "viewer",
            "type": "panel",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="view__header"
>
            <div
                        className="view__descriptor"
            >
                        Logged-In Viewer
            </div>
            <div
                        className="view__descriptor"
            >
                        Unlinked
            </div>
</div>,
          false,
          false,
          <div
            className="view"
            style={
                        Object {
                                    "height": "150pxpx",
                                    "width": "320pxpx",
                                  }
            }
>
            <ExtensionFrame
                        className="view"
                        extension={
                                    Object {
                                                "authorName": "test",
                                                "channelId": "channelId",
                                                "description": "description",
                                                "iconUrl": "icon_url",
                                                "id": "id",
                                                "name": "name",
                                                "requestIdentity": false,
                                                "sku": "sku",
                                                "state": "state",
                                                "summary": "summary",
                                                "token": "token",
                                                "vendorCode": "vendorCode",
                                                "version": "0.1",
                                                "views": Object {
                                                  "component": Object {
                                                    "aspectHeight": 3000,
                                                    "aspectWidth": 2500,
                                                    "viewerUrl": "test",
                                                    "zoom": false,
                                                  },
                                                  "config": Object {
                                                    "viewerUrl": "test",
                                                  },
                                                  "liveConfig": Object {
                                                    "viewerUrl": "test",
                                                  },
                                                  "panel": Object {
                                                    "viewerUrl": "test",
                                                  },
                                                },
                                                "whitelistedConfigUrls": Array [
                                                  "foo",
                                                ],
                                                "whitelistedPanelUrls": Array [
                                                  "bar",
                                                ],
                                              }
                        }
                        frameId="frameid-0"
                        mode="viewer"
                        type="panel"
            />
</div>,
        ],
        "className": "view__wrapper",
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "style": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <div
                className="view__descriptor"
>
                Logged-In Viewer
</div>,
              <div
                className="view__descriptor"
>
                Unlinked
</div>,
            ],
            "className": "view__header",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Logged-In Viewer",
                "className": "view__descriptor",
              },
              "ref": null,
              "rendered": "Logged-In Viewer",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Unlinked",
                "className": "view__descriptor",
              },
              "ref": null,
              "rendered": "Unlinked",
              "type": "div",
            },
          ],
          "type": "div",
        },
        false,
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ExtensionFrame
              className="view"
              extension={
                            Object {
                                          "authorName": "test",
                                          "channelId": "channelId",
                                          "description": "description",
                                          "iconUrl": "icon_url",
                                          "id": "id",
                                          "name": "name",
                                          "requestIdentity": false,
                                          "sku": "sku",
                                          "state": "state",
                                          "summary": "summary",
                                          "token": "token",
                                          "vendorCode": "vendorCode",
                                          "version": "0.1",
                                          "views": Object {
                                            "component": Object {
                                              "aspectHeight": 3000,
                                              "aspectWidth": 2500,
                                              "viewerUrl": "test",
                                              "zoom": false,
                                            },
                                            "config": Object {
                                              "viewerUrl": "test",
                                            },
                                            "liveConfig": Object {
                                              "viewerUrl": "test",
                                            },
                                            "panel": Object {
                                              "viewerUrl": "test",
                                            },
                                          },
                                          "whitelistedConfigUrls": Array [
                                            "foo",
                                          ],
                                          "whitelistedPanelUrls": Array [
                                            "bar",
                                          ],
                                        }
              }
              frameId="frameid-0"
              mode="viewer"
              type="panel"
/>,
            "className": "view",
            "style": Object {
              "height": "150pxpx",
              "width": "320pxpx",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "view",
              "extension": Object {
                "authorName": "test",
                "channelId": "channelId",
                "description": "description",
                "iconUrl": "icon_url",
                "id": "id",
                "name": "name",
                "requestIdentity": false,
                "sku": "sku",
                "state": "state",
                "summary": "summary",
                "token": "token",
                "vendorCode": "vendorCode",
                "version": "0.1",
                "views": Object {
                  "component": Object {
                    "aspectHeight": 3000,
                    "aspectWidth": 2500,
                    "viewerUrl": "test",
                    "zoom": false,
                  },
                  "config": Object {
                    "viewerUrl": "test",
                  },
                  "liveConfig": Object {
                    "viewerUrl": "test",
                  },
                  "panel": Object {
                    "viewerUrl": "test",
                  },
                },
                "whitelistedConfigUrls": Array [
                  "foo",
                ],
                "whitelistedPanelUrls": Array [
                  "bar",
                ],
              },
              "frameId": "frameid-0",
              "mode": "viewer",
              "type": "panel",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionView /> overlay mode views renders correctly when in overlay mode as a Logged Out 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionView
    deleteViewHandler={[Function]}
    extension={
        Object {
            "authorName": "test",
            "channelId": "channelId",
            "description": "description",
            "iconUrl": "icon_url",
            "id": "id",
            "name": "name",
            "requestIdentity": false,
            "sku": "sku",
            "state": "state",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "viewerUrl": "test",
                "zoom": false,
              },
              "config": Object {
                "viewerUrl": "test",
              },
              "liveConfig": Object {
                "viewerUrl": "test",
              },
              "panel": Object {
                "viewerUrl": "test",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameSize={
        Object {
            "height": "1px",
            "width": "1px",
          }
    }
    id="0"
    linked={false}
    mode="viewer"
    openEditViewHandler={[Function]}
    position={
        Object {
            "x": 0,
            "y": 0,
          }
    }
    role="Logged-Out Viewer"
    type="panel"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="view__header"
>
          <div
                    className="view__descriptor"
          >
                    Logged-Out Viewer
          </div>
          <div
                    className="view__descriptor"
          />
</div>,
        false,
        false,
        <div
          className="view"
          style={
                    Object {
                              "height": "150pxpx",
                              "width": "320pxpx",
                            }
          }
>
          <ExtensionFrame
                    className="view"
                    extension={
                              Object {
                                        "authorName": "test",
                                        "channelId": "channelId",
                                        "description": "description",
                                        "iconUrl": "icon_url",
                                        "id": "id",
                                        "name": "name",
                                        "requestIdentity": false,
                                        "sku": "sku",
                                        "state": "state",
                                        "summary": "summary",
                                        "token": "token",
                                        "vendorCode": "vendorCode",
                                        "version": "0.1",
                                        "views": Object {
                                          "component": Object {
                                            "aspectHeight": 3000,
                                            "aspectWidth": 2500,
                                            "viewerUrl": "test",
                                            "zoom": false,
                                          },
                                          "config": Object {
                                            "viewerUrl": "test",
                                          },
                                          "liveConfig": Object {
                                            "viewerUrl": "test",
                                          },
                                          "panel": Object {
                                            "viewerUrl": "test",
                                          },
                                        },
                                        "whitelistedConfigUrls": Array [
                                          "foo",
                                        ],
                                        "whitelistedPanelUrls": Array [
                                          "bar",
                                        ],
                                      }
                    }
                    frameId="frameid-0"
                    mode="viewer"
                    type="panel"
          />
</div>,
      ],
      "className": "view__wrapper",
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "style": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            <div
              className="view__descriptor"
>
              Logged-Out Viewer
</div>,
            <div
              className="view__descriptor"
/>,
          ],
          "className": "view__header",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Logged-Out Viewer",
              "className": "view__descriptor",
            },
            "ref": null,
            "rendered": "Logged-Out Viewer",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "view__descriptor",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": "div",
      },
      false,
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ExtensionFrame
            className="view"
            extension={
                        Object {
                                    "authorName": "test",
                                    "channelId": "channelId",
                                    "description": "description",
                                    "iconUrl": "icon_url",
                                    "id": "id",
                                    "name": "name",
                                    "requestIdentity": false,
                                    "sku": "sku",
                                    "state": "state",
                                    "summary": "summary",
                                    "token": "token",
                                    "vendorCode": "vendorCode",
                                    "version": "0.1",
                                    "views": Object {
                                      "component": Object {
                                        "aspectHeight": 3000,
                                        "aspectWidth": 2500,
                                        "viewerUrl": "test",
                                        "zoom": false,
                                      },
                                      "config": Object {
                                        "viewerUrl": "test",
                                      },
                                      "liveConfig": Object {
                                        "viewerUrl": "test",
                                      },
                                      "panel": Object {
                                        "viewerUrl": "test",
                                      },
                                    },
                                    "whitelistedConfigUrls": Array [
                                      "foo",
                                    ],
                                    "whitelistedPanelUrls": Array [
                                      "bar",
                                    ],
                                  }
            }
            frameId="frameid-0"
            mode="viewer"
            type="panel"
/>,
          "className": "view",
          "style": Object {
            "height": "150pxpx",
            "width": "320pxpx",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "view",
            "extension": Object {
              "authorName": "test",
              "channelId": "channelId",
              "description": "description",
              "iconUrl": "icon_url",
              "id": "id",
              "name": "name",
              "requestIdentity": false,
              "sku": "sku",
              "state": "state",
              "summary": "summary",
              "token": "token",
              "vendorCode": "vendorCode",
              "version": "0.1",
              "views": Object {
                "component": Object {
                  "aspectHeight": 3000,
                  "aspectWidth": 2500,
                  "viewerUrl": "test",
                  "zoom": false,
                },
                "config": Object {
                  "viewerUrl": "test",
                },
                "liveConfig": Object {
                  "viewerUrl": "test",
                },
                "panel": Object {
                  "viewerUrl": "test",
                },
              },
              "whitelistedConfigUrls": Array [
                "foo",
              ],
              "whitelistedPanelUrls": Array [
                "bar",
              ],
            },
            "frameId": "frameid-0",
            "mode": "viewer",
            "type": "panel",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="view__header"
>
            <div
                        className="view__descriptor"
            >
                        Logged-Out Viewer
            </div>
            <div
                        className="view__descriptor"
            />
</div>,
          false,
          false,
          <div
            className="view"
            style={
                        Object {
                                    "height": "150pxpx",
                                    "width": "320pxpx",
                                  }
            }
>
            <ExtensionFrame
                        className="view"
                        extension={
                                    Object {
                                                "authorName": "test",
                                                "channelId": "channelId",
                                                "description": "description",
                                                "iconUrl": "icon_url",
                                                "id": "id",
                                                "name": "name",
                                                "requestIdentity": false,
                                                "sku": "sku",
                                                "state": "state",
                                                "summary": "summary",
                                                "token": "token",
                                                "vendorCode": "vendorCode",
                                                "version": "0.1",
                                                "views": Object {
                                                  "component": Object {
                                                    "aspectHeight": 3000,
                                                    "aspectWidth": 2500,
                                                    "viewerUrl": "test",
                                                    "zoom": false,
                                                  },
                                                  "config": Object {
                                                    "viewerUrl": "test",
                                                  },
                                                  "liveConfig": Object {
                                                    "viewerUrl": "test",
                                                  },
                                                  "panel": Object {
                                                    "viewerUrl": "test",
                                                  },
                                                },
                                                "whitelistedConfigUrls": Array [
                                                  "foo",
                                                ],
                                                "whitelistedPanelUrls": Array [
                                                  "bar",
                                                ],
                                              }
                        }
                        frameId="frameid-0"
                        mode="viewer"
                        type="panel"
            />
</div>,
        ],
        "className": "view__wrapper",
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "style": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <div
                className="view__descriptor"
>
                Logged-Out Viewer
</div>,
              <div
                className="view__descriptor"
/>,
            ],
            "className": "view__header",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Logged-Out Viewer",
                "className": "view__descriptor",
              },
              "ref": null,
              "rendered": "Logged-Out Viewer",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "view__descriptor",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
          ],
          "type": "div",
        },
        false,
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ExtensionFrame
              className="view"
              extension={
                            Object {
                                          "authorName": "test",
                                          "channelId": "channelId",
                                          "description": "description",
                                          "iconUrl": "icon_url",
                                          "id": "id",
                                          "name": "name",
                                          "requestIdentity": false,
                                          "sku": "sku",
                                          "state": "state",
                                          "summary": "summary",
                                          "token": "token",
                                          "vendorCode": "vendorCode",
                                          "version": "0.1",
                                          "views": Object {
                                            "component": Object {
                                              "aspectHeight": 3000,
                                              "aspectWidth": 2500,
                                              "viewerUrl": "test",
                                              "zoom": false,
                                            },
                                            "config": Object {
                                              "viewerUrl": "test",
                                            },
                                            "liveConfig": Object {
                                              "viewerUrl": "test",
                                            },
                                            "panel": Object {
                                              "viewerUrl": "test",
                                            },
                                          },
                                          "whitelistedConfigUrls": Array [
                                            "foo",
                                          ],
                                          "whitelistedPanelUrls": Array [
                                            "bar",
                                          ],
                                        }
              }
              frameId="frameid-0"
              mode="viewer"
              type="panel"
/>,
            "className": "view",
            "style": Object {
              "height": "150pxpx",
              "width": "320pxpx",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "view",
              "extension": Object {
                "authorName": "test",
                "channelId": "channelId",
                "description": "description",
                "iconUrl": "icon_url",
                "id": "id",
                "name": "name",
                "requestIdentity": false,
                "sku": "sku",
                "state": "state",
                "summary": "summary",
                "token": "token",
                "vendorCode": "vendorCode",
                "version": "0.1",
                "views": Object {
                  "component": Object {
                    "aspectHeight": 3000,
                    "aspectWidth": 2500,
                    "viewerUrl": "test",
                    "zoom": false,
                  },
                  "config": Object {
                    "viewerUrl": "test",
                  },
                  "liveConfig": Object {
                    "viewerUrl": "test",
                  },
                  "panel": Object {
                    "viewerUrl": "test",
                  },
                },
                "whitelistedConfigUrls": Array [
                  "foo",
                ],
                "whitelistedPanelUrls": Array [
                  "bar",
                ],
              },
              "frameId": "frameid-0",
              "mode": "viewer",
              "type": "panel",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionView /> panel mode views renders correctly when in panel mode as a Broadcaster 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionView
    deleteViewHandler={[Function]}
    extension={
        Object {
            "authorName": "test",
            "channelId": "channelId",
            "description": "description",
            "iconUrl": "icon_url",
            "id": "id",
            "name": "name",
            "requestIdentity": false,
            "sku": "sku",
            "state": "state",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "viewerUrl": "test",
                "zoom": false,
              },
              "config": Object {
                "viewerUrl": "test",
              },
              "liveConfig": Object {
                "viewerUrl": "test",
              },
              "panel": Object {
                "viewerUrl": "test",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameSize={
        Object {
            "height": 0,
            "width": 0,
          }
    }
    id="0"
    linked={false}
    mode="viewer"
    openEditViewHandler={[Function]}
    position={
        Object {
            "x": 0,
            "y": 0,
          }
    }
    role="Broadcaster"
    type="panel"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="view__header"
>
          <div
                    className="view__descriptor"
          >
                    Broadcaster
          </div>
          <div
                    className="view__descriptor"
          />
</div>,
        false,
        false,
        <div
          className="view"
          style={
                    Object {
                              "height": "150pxpx",
                              "width": "320pxpx",
                            }
          }
>
          <ExtensionFrame
                    className="view"
                    extension={
                              Object {
                                        "authorName": "test",
                                        "channelId": "channelId",
                                        "description": "description",
                                        "iconUrl": "icon_url",
                                        "id": "id",
                                        "name": "name",
                                        "requestIdentity": false,
                                        "sku": "sku",
                                        "state": "state",
                                        "summary": "summary",
                                        "token": "token",
                                        "vendorCode": "vendorCode",
                                        "version": "0.1",
                                        "views": Object {
                                          "component": Object {
                                            "aspectHeight": 3000,
                                            "aspectWidth": 2500,
                                            "viewerUrl": "test",
                                            "zoom": false,
                                          },
                                          "config": Object {
                                            "viewerUrl": "test",
                                          },
                                          "liveConfig": Object {
                                            "viewerUrl": "test",
                                          },
                                          "panel": Object {
                                            "viewerUrl": "test",
                                          },
                                        },
                                        "whitelistedConfigUrls": Array [
                                          "foo",
                                        ],
                                        "whitelistedPanelUrls": Array [
                                          "bar",
                                        ],
                                      }
                    }
                    frameId="frameid-0"
                    mode="viewer"
                    type="panel"
          />
</div>,
      ],
      "className": "view__wrapper",
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "style": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            <div
              className="view__descriptor"
>
              Broadcaster
</div>,
            <div
              className="view__descriptor"
/>,
          ],
          "className": "view__header",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Broadcaster",
              "className": "view__descriptor",
            },
            "ref": null,
            "rendered": "Broadcaster",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "view__descriptor",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": "div",
      },
      false,
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ExtensionFrame
            className="view"
            extension={
                        Object {
                                    "authorName": "test",
                                    "channelId": "channelId",
                                    "description": "description",
                                    "iconUrl": "icon_url",
                                    "id": "id",
                                    "name": "name",
                                    "requestIdentity": false,
                                    "sku": "sku",
                                    "state": "state",
                                    "summary": "summary",
                                    "token": "token",
                                    "vendorCode": "vendorCode",
                                    "version": "0.1",
                                    "views": Object {
                                      "component": Object {
                                        "aspectHeight": 3000,
                                        "aspectWidth": 2500,
                                        "viewerUrl": "test",
                                        "zoom": false,
                                      },
                                      "config": Object {
                                        "viewerUrl": "test",
                                      },
                                      "liveConfig": Object {
                                        "viewerUrl": "test",
                                      },
                                      "panel": Object {
                                        "viewerUrl": "test",
                                      },
                                    },
                                    "whitelistedConfigUrls": Array [
                                      "foo",
                                    ],
                                    "whitelistedPanelUrls": Array [
                                      "bar",
                                    ],
                                  }
            }
            frameId="frameid-0"
            mode="viewer"
            type="panel"
/>,
          "className": "view",
          "style": Object {
            "height": "150pxpx",
            "width": "320pxpx",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "view",
            "extension": Object {
              "authorName": "test",
              "channelId": "channelId",
              "description": "description",
              "iconUrl": "icon_url",
              "id": "id",
              "name": "name",
              "requestIdentity": false,
              "sku": "sku",
              "state": "state",
              "summary": "summary",
              "token": "token",
              "vendorCode": "vendorCode",
              "version": "0.1",
              "views": Object {
                "component": Object {
                  "aspectHeight": 3000,
                  "aspectWidth": 2500,
                  "viewerUrl": "test",
                  "zoom": false,
                },
                "config": Object {
                  "viewerUrl": "test",
                },
                "liveConfig": Object {
                  "viewerUrl": "test",
                },
                "panel": Object {
                  "viewerUrl": "test",
                },
              },
              "whitelistedConfigUrls": Array [
                "foo",
              ],
              "whitelistedPanelUrls": Array [
                "bar",
              ],
            },
            "frameId": "frameid-0",
            "mode": "viewer",
            "type": "panel",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="view__header"
>
            <div
                        className="view__descriptor"
            >
                        Broadcaster
            </div>
            <div
                        className="view__descriptor"
            />
</div>,
          false,
          false,
          <div
            className="view"
            style={
                        Object {
                                    "height": "150pxpx",
                                    "width": "320pxpx",
                                  }
            }
>
            <ExtensionFrame
                        className="view"
                        extension={
                                    Object {
                                                "authorName": "test",
                                                "channelId": "channelId",
                                                "description": "description",
                                                "iconUrl": "icon_url",
                                                "id": "id",
                                                "name": "name",
                                                "requestIdentity": false,
                                                "sku": "sku",
                                                "state": "state",
                                                "summary": "summary",
                                                "token": "token",
                                                "vendorCode": "vendorCode",
                                                "version": "0.1",
                                                "views": Object {
                                                  "component": Object {
                                                    "aspectHeight": 3000,
                                                    "aspectWidth": 2500,
                                                    "viewerUrl": "test",
                                                    "zoom": false,
                                                  },
                                                  "config": Object {
                                                    "viewerUrl": "test",
                                                  },
                                                  "liveConfig": Object {
                                                    "viewerUrl": "test",
                                                  },
                                                  "panel": Object {
                                                    "viewerUrl": "test",
                                                  },
                                                },
                                                "whitelistedConfigUrls": Array [
                                                  "foo",
                                                ],
                                                "whitelistedPanelUrls": Array [
                                                  "bar",
                                                ],
                                              }
                        }
                        frameId="frameid-0"
                        mode="viewer"
                        type="panel"
            />
</div>,
        ],
        "className": "view__wrapper",
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "style": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <div
                className="view__descriptor"
>
                Broadcaster
</div>,
              <div
                className="view__descriptor"
/>,
            ],
            "className": "view__header",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Broadcaster",
                "className": "view__descriptor",
              },
              "ref": null,
              "rendered": "Broadcaster",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "view__descriptor",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
          ],
          "type": "div",
        },
        false,
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ExtensionFrame
              className="view"
              extension={
                            Object {
                                          "authorName": "test",
                                          "channelId": "channelId",
                                          "description": "description",
                                          "iconUrl": "icon_url",
                                          "id": "id",
                                          "name": "name",
                                          "requestIdentity": false,
                                          "sku": "sku",
                                          "state": "state",
                                          "summary": "summary",
                                          "token": "token",
                                          "vendorCode": "vendorCode",
                                          "version": "0.1",
                                          "views": Object {
                                            "component": Object {
                                              "aspectHeight": 3000,
                                              "aspectWidth": 2500,
                                              "viewerUrl": "test",
                                              "zoom": false,
                                            },
                                            "config": Object {
                                              "viewerUrl": "test",
                                            },
                                            "liveConfig": Object {
                                              "viewerUrl": "test",
                                            },
                                            "panel": Object {
                                              "viewerUrl": "test",
                                            },
                                          },
                                          "whitelistedConfigUrls": Array [
                                            "foo",
                                          ],
                                          "whitelistedPanelUrls": Array [
                                            "bar",
                                          ],
                                        }
              }
              frameId="frameid-0"
              mode="viewer"
              type="panel"
/>,
            "className": "view",
            "style": Object {
              "height": "150pxpx",
              "width": "320pxpx",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "view",
              "extension": Object {
                "authorName": "test",
                "channelId": "channelId",
                "description": "description",
                "iconUrl": "icon_url",
                "id": "id",
                "name": "name",
                "requestIdentity": false,
                "sku": "sku",
                "state": "state",
                "summary": "summary",
                "token": "token",
                "vendorCode": "vendorCode",
                "version": "0.1",
                "views": Object {
                  "component": Object {
                    "aspectHeight": 3000,
                    "aspectWidth": 2500,
                    "viewerUrl": "test",
                    "zoom": false,
                  },
                  "config": Object {
                    "viewerUrl": "test",
                  },
                  "liveConfig": Object {
                    "viewerUrl": "test",
                  },
                  "panel": Object {
                    "viewerUrl": "test",
                  },
                },
                "whitelistedConfigUrls": Array [
                  "foo",
                ],
                "whitelistedPanelUrls": Array [
                  "bar",
                ],
              },
              "frameId": "frameid-0",
              "mode": "viewer",
              "type": "panel",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionView /> panel mode views renders correctly when in panel mode as a Logged In and Linked Viewer 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionView
    deleteViewHandler={[Function]}
    extension={
        Object {
            "authorName": "test",
            "channelId": "channelId",
            "description": "description",
            "iconUrl": "icon_url",
            "id": "id",
            "name": "name",
            "requestIdentity": false,
            "sku": "sku",
            "state": "state",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "viewerUrl": "test",
                "zoom": false,
              },
              "config": Object {
                "viewerUrl": "test",
              },
              "liveConfig": Object {
                "viewerUrl": "test",
              },
              "panel": Object {
                "viewerUrl": "test",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameSize={
        Object {
            "height": 0,
            "width": 0,
          }
    }
    id="0"
    linked={true}
    mode="viewer"
    openEditViewHandler={[Function]}
    position={
        Object {
            "x": 0,
            "y": 0,
          }
    }
    role="Logged-In Viewer"
    type="panel"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="view__header"
>
          <div
                    className="view__descriptor"
          >
                    Logged-In Viewer
          </div>
          <div
                    className="view__descriptor"
          >
                    Linked
          </div>
</div>,
        false,
        false,
        <div
          className="view"
          style={
                    Object {
                              "height": "150pxpx",
                              "width": "320pxpx",
                            }
          }
>
          <ExtensionFrame
                    className="view"
                    extension={
                              Object {
                                        "authorName": "test",
                                        "channelId": "channelId",
                                        "description": "description",
                                        "iconUrl": "icon_url",
                                        "id": "id",
                                        "name": "name",
                                        "requestIdentity": false,
                                        "sku": "sku",
                                        "state": "state",
                                        "summary": "summary",
                                        "token": "token",
                                        "vendorCode": "vendorCode",
                                        "version": "0.1",
                                        "views": Object {
                                          "component": Object {
                                            "aspectHeight": 3000,
                                            "aspectWidth": 2500,
                                            "viewerUrl": "test",
                                            "zoom": false,
                                          },
                                          "config": Object {
                                            "viewerUrl": "test",
                                          },
                                          "liveConfig": Object {
                                            "viewerUrl": "test",
                                          },
                                          "panel": Object {
                                            "viewerUrl": "test",
                                          },
                                        },
                                        "whitelistedConfigUrls": Array [
                                          "foo",
                                        ],
                                        "whitelistedPanelUrls": Array [
                                          "bar",
                                        ],
                                      }
                    }
                    frameId="frameid-0"
                    mode="viewer"
                    type="panel"
          />
</div>,
      ],
      "className": "view__wrapper",
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "style": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            <div
              className="view__descriptor"
>
              Logged-In Viewer
</div>,
            <div
              className="view__descriptor"
>
              Linked
</div>,
          ],
          "className": "view__header",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Logged-In Viewer",
              "className": "view__descriptor",
            },
            "ref": null,
            "rendered": "Logged-In Viewer",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Linked",
              "className": "view__descriptor",
            },
            "ref": null,
            "rendered": "Linked",
            "type": "div",
          },
        ],
        "type": "div",
      },
      false,
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ExtensionFrame
            className="view"
            extension={
                        Object {
                                    "authorName": "test",
                                    "channelId": "channelId",
                                    "description": "description",
                                    "iconUrl": "icon_url",
                                    "id": "id",
                                    "name": "name",
                                    "requestIdentity": false,
                                    "sku": "sku",
                                    "state": "state",
                                    "summary": "summary",
                                    "token": "token",
                                    "vendorCode": "vendorCode",
                                    "version": "0.1",
                                    "views": Object {
                                      "component": Object {
                                        "aspectHeight": 3000,
                                        "aspectWidth": 2500,
                                        "viewerUrl": "test",
                                        "zoom": false,
                                      },
                                      "config": Object {
                                        "viewerUrl": "test",
                                      },
                                      "liveConfig": Object {
                                        "viewerUrl": "test",
                                      },
                                      "panel": Object {
                                        "viewerUrl": "test",
                                      },
                                    },
                                    "whitelistedConfigUrls": Array [
                                      "foo",
                                    ],
                                    "whitelistedPanelUrls": Array [
                                      "bar",
                                    ],
                                  }
            }
            frameId="frameid-0"
            mode="viewer"
            type="panel"
/>,
          "className": "view",
          "style": Object {
            "height": "150pxpx",
            "width": "320pxpx",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "view",
            "extension": Object {
              "authorName": "test",
              "channelId": "channelId",
              "description": "description",
              "iconUrl": "icon_url",
              "id": "id",
              "name": "name",
              "requestIdentity": false,
              "sku": "sku",
              "state": "state",
              "summary": "summary",
              "token": "token",
              "vendorCode": "vendorCode",
              "version": "0.1",
              "views": Object {
                "component": Object {
                  "aspectHeight": 3000,
                  "aspectWidth": 2500,
                  "viewerUrl": "test",
                  "zoom": false,
                },
                "config": Object {
                  "viewerUrl": "test",
                },
                "liveConfig": Object {
                  "viewerUrl": "test",
                },
                "panel": Object {
                  "viewerUrl": "test",
                },
              },
              "whitelistedConfigUrls": Array [
                "foo",
              ],
              "whitelistedPanelUrls": Array [
                "bar",
              ],
            },
            "frameId": "frameid-0",
            "mode": "viewer",
            "type": "panel",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="view__header"
>
            <div
                        className="view__descriptor"
            >
                        Logged-In Viewer
            </div>
            <div
                        className="view__descriptor"
            >
                        Linked
            </div>
</div>,
          false,
          false,
          <div
            className="view"
            style={
                        Object {
                                    "height": "150pxpx",
                                    "width": "320pxpx",
                                  }
            }
>
            <ExtensionFrame
                        className="view"
                        extension={
                                    Object {
                                                "authorName": "test",
                                                "channelId": "channelId",
                                                "description": "description",
                                                "iconUrl": "icon_url",
                                                "id": "id",
                                                "name": "name",
                                                "requestIdentity": false,
                                                "sku": "sku",
                                                "state": "state",
                                                "summary": "summary",
                                                "token": "token",
                                                "vendorCode": "vendorCode",
                                                "version": "0.1",
                                                "views": Object {
                                                  "component": Object {
                                                    "aspectHeight": 3000,
                                                    "aspectWidth": 2500,
                                                    "viewerUrl": "test",
                                                    "zoom": false,
                                                  },
                                                  "config": Object {
                                                    "viewerUrl": "test",
                                                  },
                                                  "liveConfig": Object {
                                                    "viewerUrl": "test",
                                                  },
                                                  "panel": Object {
                                                    "viewerUrl": "test",
                                                  },
                                                },
                                                "whitelistedConfigUrls": Array [
                                                  "foo",
                                                ],
                                                "whitelistedPanelUrls": Array [
                                                  "bar",
                                                ],
                                              }
                        }
                        frameId="frameid-0"
                        mode="viewer"
                        type="panel"
            />
</div>,
        ],
        "className": "view__wrapper",
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "style": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <div
                className="view__descriptor"
>
                Logged-In Viewer
</div>,
              <div
                className="view__descriptor"
>
                Linked
</div>,
            ],
            "className": "view__header",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Logged-In Viewer",
                "className": "view__descriptor",
              },
              "ref": null,
              "rendered": "Logged-In Viewer",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Linked",
                "className": "view__descriptor",
              },
              "ref": null,
              "rendered": "Linked",
              "type": "div",
            },
          ],
          "type": "div",
        },
        false,
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ExtensionFrame
              className="view"
              extension={
                            Object {
                                          "authorName": "test",
                                          "channelId": "channelId",
                                          "description": "description",
                                          "iconUrl": "icon_url",
                                          "id": "id",
                                          "name": "name",
                                          "requestIdentity": false,
                                          "sku": "sku",
                                          "state": "state",
                                          "summary": "summary",
                                          "token": "token",
                                          "vendorCode": "vendorCode",
                                          "version": "0.1",
                                          "views": Object {
                                            "component": Object {
                                              "aspectHeight": 3000,
                                              "aspectWidth": 2500,
                                              "viewerUrl": "test",
                                              "zoom": false,
                                            },
                                            "config": Object {
                                              "viewerUrl": "test",
                                            },
                                            "liveConfig": Object {
                                              "viewerUrl": "test",
                                            },
                                            "panel": Object {
                                              "viewerUrl": "test",
                                            },
                                          },
                                          "whitelistedConfigUrls": Array [
                                            "foo",
                                          ],
                                          "whitelistedPanelUrls": Array [
                                            "bar",
                                          ],
                                        }
              }
              frameId="frameid-0"
              mode="viewer"
              type="panel"
/>,
            "className": "view",
            "style": Object {
              "height": "150pxpx",
              "width": "320pxpx",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "view",
              "extension": Object {
                "authorName": "test",
                "channelId": "channelId",
                "description": "description",
                "iconUrl": "icon_url",
                "id": "id",
                "name": "name",
                "requestIdentity": false,
                "sku": "sku",
                "state": "state",
                "summary": "summary",
                "token": "token",
                "vendorCode": "vendorCode",
                "version": "0.1",
                "views": Object {
                  "component": Object {
                    "aspectHeight": 3000,
                    "aspectWidth": 2500,
                    "viewerUrl": "test",
                    "zoom": false,
                  },
                  "config": Object {
                    "viewerUrl": "test",
                  },
                  "liveConfig": Object {
                    "viewerUrl": "test",
                  },
                  "panel": Object {
                    "viewerUrl": "test",
                  },
                },
                "whitelistedConfigUrls": Array [
                  "foo",
                ],
                "whitelistedPanelUrls": Array [
                  "bar",
                ],
              },
              "frameId": "frameid-0",
              "mode": "viewer",
              "type": "panel",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionView /> panel mode views renders correctly when in panel mode as a Logged In and Unlinked Viewer 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionView
    deleteViewHandler={[Function]}
    extension={
        Object {
            "authorName": "test",
            "channelId": "channelId",
            "description": "description",
            "iconUrl": "icon_url",
            "id": "id",
            "name": "name",
            "requestIdentity": false,
            "sku": "sku",
            "state": "state",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "viewerUrl": "test",
                "zoom": false,
              },
              "config": Object {
                "viewerUrl": "test",
              },
              "liveConfig": Object {
                "viewerUrl": "test",
              },
              "panel": Object {
                "viewerUrl": "test",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameSize={
        Object {
            "height": 0,
            "width": 0,
          }
    }
    id="0"
    linked={false}
    mode="viewer"
    openEditViewHandler={[Function]}
    position={
        Object {
            "x": 0,
            "y": 0,
          }
    }
    role="Logged-In Viewer"
    type="panel"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="view__header"
>
          <div
                    className="view__descriptor"
          >
                    Logged-In Viewer
          </div>
          <div
                    className="view__descriptor"
          >
                    Unlinked
          </div>
</div>,
        false,
        false,
        <div
          className="view"
          style={
                    Object {
                              "height": "150pxpx",
                              "width": "320pxpx",
                            }
          }
>
          <ExtensionFrame
                    className="view"
                    extension={
                              Object {
                                        "authorName": "test",
                                        "channelId": "channelId",
                                        "description": "description",
                                        "iconUrl": "icon_url",
                                        "id": "id",
                                        "name": "name",
                                        "requestIdentity": false,
                                        "sku": "sku",
                                        "state": "state",
                                        "summary": "summary",
                                        "token": "token",
                                        "vendorCode": "vendorCode",
                                        "version": "0.1",
                                        "views": Object {
                                          "component": Object {
                                            "aspectHeight": 3000,
                                            "aspectWidth": 2500,
                                            "viewerUrl": "test",
                                            "zoom": false,
                                          },
                                          "config": Object {
                                            "viewerUrl": "test",
                                          },
                                          "liveConfig": Object {
                                            "viewerUrl": "test",
                                          },
                                          "panel": Object {
                                            "viewerUrl": "test",
                                          },
                                        },
                                        "whitelistedConfigUrls": Array [
                                          "foo",
                                        ],
                                        "whitelistedPanelUrls": Array [
                                          "bar",
                                        ],
                                      }
                    }
                    frameId="frameid-0"
                    mode="viewer"
                    type="panel"
          />
</div>,
      ],
      "className": "view__wrapper",
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "style": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            <div
              className="view__descriptor"
>
              Logged-In Viewer
</div>,
            <div
              className="view__descriptor"
>
              Unlinked
</div>,
          ],
          "className": "view__header",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Logged-In Viewer",
              "className": "view__descriptor",
            },
            "ref": null,
            "rendered": "Logged-In Viewer",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Unlinked",
              "className": "view__descriptor",
            },
            "ref": null,
            "rendered": "Unlinked",
            "type": "div",
          },
        ],
        "type": "div",
      },
      false,
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ExtensionFrame
            className="view"
            extension={
                        Object {
                                    "authorName": "test",
                                    "channelId": "channelId",
                                    "description": "description",
                                    "iconUrl": "icon_url",
                                    "id": "id",
                                    "name": "name",
                                    "requestIdentity": false,
                                    "sku": "sku",
                                    "state": "state",
                                    "summary": "summary",
                                    "token": "token",
                                    "vendorCode": "vendorCode",
                                    "version": "0.1",
                                    "views": Object {
                                      "component": Object {
                                        "aspectHeight": 3000,
                                        "aspectWidth": 2500,
                                        "viewerUrl": "test",
                                        "zoom": false,
                                      },
                                      "config": Object {
                                        "viewerUrl": "test",
                                      },
                                      "liveConfig": Object {
                                        "viewerUrl": "test",
                                      },
                                      "panel": Object {
                                        "viewerUrl": "test",
                                      },
                                    },
                                    "whitelistedConfigUrls": Array [
                                      "foo",
                                    ],
                                    "whitelistedPanelUrls": Array [
                                      "bar",
                                    ],
                                  }
            }
            frameId="frameid-0"
            mode="viewer"
            type="panel"
/>,
          "className": "view",
          "style": Object {
            "height": "150pxpx",
            "width": "320pxpx",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "view",
            "extension": Object {
              "authorName": "test",
              "channelId": "channelId",
              "description": "description",
              "iconUrl": "icon_url",
              "id": "id",
              "name": "name",
              "requestIdentity": false,
              "sku": "sku",
              "state": "state",
              "summary": "summary",
              "token": "token",
              "vendorCode": "vendorCode",
              "version": "0.1",
              "views": Object {
                "component": Object {
                  "aspectHeight": 3000,
                  "aspectWidth": 2500,
                  "viewerUrl": "test",
                  "zoom": false,
                },
                "config": Object {
                  "viewerUrl": "test",
                },
                "liveConfig": Object {
                  "viewerUrl": "test",
                },
                "panel": Object {
                  "viewerUrl": "test",
                },
              },
              "whitelistedConfigUrls": Array [
                "foo",
              ],
              "whitelistedPanelUrls": Array [
                "bar",
              ],
            },
            "frameId": "frameid-0",
            "mode": "viewer",
            "type": "panel",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="view__header"
>
            <div
                        className="view__descriptor"
            >
                        Logged-In Viewer
            </div>
            <div
                        className="view__descriptor"
            >
                        Unlinked
            </div>
</div>,
          false,
          false,
          <div
            className="view"
            style={
                        Object {
                                    "height": "150pxpx",
                                    "width": "320pxpx",
                                  }
            }
>
            <ExtensionFrame
                        className="view"
                        extension={
                                    Object {
                                                "authorName": "test",
                                                "channelId": "channelId",
                                                "description": "description",
                                                "iconUrl": "icon_url",
                                                "id": "id",
                                                "name": "name",
                                                "requestIdentity": false,
                                                "sku": "sku",
                                                "state": "state",
                                                "summary": "summary",
                                                "token": "token",
                                                "vendorCode": "vendorCode",
                                                "version": "0.1",
                                                "views": Object {
                                                  "component": Object {
                                                    "aspectHeight": 3000,
                                                    "aspectWidth": 2500,
                                                    "viewerUrl": "test",
                                                    "zoom": false,
                                                  },
                                                  "config": Object {
                                                    "viewerUrl": "test",
                                                  },
                                                  "liveConfig": Object {
                                                    "viewerUrl": "test",
                                                  },
                                                  "panel": Object {
                                                    "viewerUrl": "test",
                                                  },
                                                },
                                                "whitelistedConfigUrls": Array [
                                                  "foo",
                                                ],
                                                "whitelistedPanelUrls": Array [
                                                  "bar",
                                                ],
                                              }
                        }
                        frameId="frameid-0"
                        mode="viewer"
                        type="panel"
            />
</div>,
        ],
        "className": "view__wrapper",
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "style": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <div
                className="view__descriptor"
>
                Logged-In Viewer
</div>,
              <div
                className="view__descriptor"
>
                Unlinked
</div>,
            ],
            "className": "view__header",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Logged-In Viewer",
                "className": "view__descriptor",
              },
              "ref": null,
              "rendered": "Logged-In Viewer",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Unlinked",
                "className": "view__descriptor",
              },
              "ref": null,
              "rendered": "Unlinked",
              "type": "div",
            },
          ],
          "type": "div",
        },
        false,
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ExtensionFrame
              className="view"
              extension={
                            Object {
                                          "authorName": "test",
                                          "channelId": "channelId",
                                          "description": "description",
                                          "iconUrl": "icon_url",
                                          "id": "id",
                                          "name": "name",
                                          "requestIdentity": false,
                                          "sku": "sku",
                                          "state": "state",
                                          "summary": "summary",
                                          "token": "token",
                                          "vendorCode": "vendorCode",
                                          "version": "0.1",
                                          "views": Object {
                                            "component": Object {
                                              "aspectHeight": 3000,
                                              "aspectWidth": 2500,
                                              "viewerUrl": "test",
                                              "zoom": false,
                                            },
                                            "config": Object {
                                              "viewerUrl": "test",
                                            },
                                            "liveConfig": Object {
                                              "viewerUrl": "test",
                                            },
                                            "panel": Object {
                                              "viewerUrl": "test",
                                            },
                                          },
                                          "whitelistedConfigUrls": Array [
                                            "foo",
                                          ],
                                          "whitelistedPanelUrls": Array [
                                            "bar",
                                          ],
                                        }
              }
              frameId="frameid-0"
              mode="viewer"
              type="panel"
/>,
            "className": "view",
            "style": Object {
              "height": "150pxpx",
              "width": "320pxpx",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "view",
              "extension": Object {
                "authorName": "test",
                "channelId": "channelId",
                "description": "description",
                "iconUrl": "icon_url",
                "id": "id",
                "name": "name",
                "requestIdentity": false,
                "sku": "sku",
                "state": "state",
                "summary": "summary",
                "token": "token",
                "vendorCode": "vendorCode",
                "version": "0.1",
                "views": Object {
                  "component": Object {
                    "aspectHeight": 3000,
                    "aspectWidth": 2500,
                    "viewerUrl": "test",
                    "zoom": false,
                  },
                  "config": Object {
                    "viewerUrl": "test",
                  },
                  "liveConfig": Object {
                    "viewerUrl": "test",
                  },
                  "panel": Object {
                    "viewerUrl": "test",
                  },
                },
                "whitelistedConfigUrls": Array [
                  "foo",
                ],
                "whitelistedPanelUrls": Array [
                  "bar",
                ],
              },
              "frameId": "frameid-0",
              "mode": "viewer",
              "type": "panel",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionView /> panel mode views renders correctly when in panel mode as a Logged Out 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionView
    deleteViewHandler={[Function]}
    extension={
        Object {
            "authorName": "test",
            "channelId": "channelId",
            "description": "description",
            "iconUrl": "icon_url",
            "id": "id",
            "name": "name",
            "requestIdentity": false,
            "sku": "sku",
            "state": "state",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "viewerUrl": "test",
                "zoom": false,
              },
              "config": Object {
                "viewerUrl": "test",
              },
              "liveConfig": Object {
                "viewerUrl": "test",
              },
              "panel": Object {
                "viewerUrl": "test",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameSize={
        Object {
            "height": 0,
            "width": 0,
          }
    }
    id="0"
    linked={false}
    mode="viewer"
    openEditViewHandler={[Function]}
    position={
        Object {
            "x": 0,
            "y": 0,
          }
    }
    role="Logged-Out Viewer"
    type="panel"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="view__header"
>
          <div
                    className="view__descriptor"
          >
                    Logged-Out Viewer
          </div>
          <div
                    className="view__descriptor"
          />
</div>,
        false,
        false,
        <div
          className="view"
          style={
                    Object {
                              "height": "150pxpx",
                              "width": "320pxpx",
                            }
          }
>
          <ExtensionFrame
                    className="view"
                    extension={
                              Object {
                                        "authorName": "test",
                                        "channelId": "channelId",
                                        "description": "description",
                                        "iconUrl": "icon_url",
                                        "id": "id",
                                        "name": "name",
                                        "requestIdentity": false,
                                        "sku": "sku",
                                        "state": "state",
                                        "summary": "summary",
                                        "token": "token",
                                        "vendorCode": "vendorCode",
                                        "version": "0.1",
                                        "views": Object {
                                          "component": Object {
                                            "aspectHeight": 3000,
                                            "aspectWidth": 2500,
                                            "viewerUrl": "test",
                                            "zoom": false,
                                          },
                                          "config": Object {
                                            "viewerUrl": "test",
                                          },
                                          "liveConfig": Object {
                                            "viewerUrl": "test",
                                          },
                                          "panel": Object {
                                            "viewerUrl": "test",
                                          },
                                        },
                                        "whitelistedConfigUrls": Array [
                                          "foo",
                                        ],
                                        "whitelistedPanelUrls": Array [
                                          "bar",
                                        ],
                                      }
                    }
                    frameId="frameid-0"
                    mode="viewer"
                    type="panel"
          />
</div>,
      ],
      "className": "view__wrapper",
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "style": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            <div
              className="view__descriptor"
>
              Logged-Out Viewer
</div>,
            <div
              className="view__descriptor"
/>,
          ],
          "className": "view__header",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Logged-Out Viewer",
              "className": "view__descriptor",
            },
            "ref": null,
            "rendered": "Logged-Out Viewer",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "view__descriptor",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": "div",
      },
      false,
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ExtensionFrame
            className="view"
            extension={
                        Object {
                                    "authorName": "test",
                                    "channelId": "channelId",
                                    "description": "description",
                                    "iconUrl": "icon_url",
                                    "id": "id",
                                    "name": "name",
                                    "requestIdentity": false,
                                    "sku": "sku",
                                    "state": "state",
                                    "summary": "summary",
                                    "token": "token",
                                    "vendorCode": "vendorCode",
                                    "version": "0.1",
                                    "views": Object {
                                      "component": Object {
                                        "aspectHeight": 3000,
                                        "aspectWidth": 2500,
                                        "viewerUrl": "test",
                                        "zoom": false,
                                      },
                                      "config": Object {
                                        "viewerUrl": "test",
                                      },
                                      "liveConfig": Object {
                                        "viewerUrl": "test",
                                      },
                                      "panel": Object {
                                        "viewerUrl": "test",
                                      },
                                    },
                                    "whitelistedConfigUrls": Array [
                                      "foo",
                                    ],
                                    "whitelistedPanelUrls": Array [
                                      "bar",
                                    ],
                                  }
            }
            frameId="frameid-0"
            mode="viewer"
            type="panel"
/>,
          "className": "view",
          "style": Object {
            "height": "150pxpx",
            "width": "320pxpx",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "view",
            "extension": Object {
              "authorName": "test",
              "channelId": "channelId",
              "description": "description",
              "iconUrl": "icon_url",
              "id": "id",
              "name": "name",
              "requestIdentity": false,
              "sku": "sku",
              "state": "state",
              "summary": "summary",
              "token": "token",
              "vendorCode": "vendorCode",
              "version": "0.1",
              "views": Object {
                "component": Object {
                  "aspectHeight": 3000,
                  "aspectWidth": 2500,
                  "viewerUrl": "test",
                  "zoom": false,
                },
                "config": Object {
                  "viewerUrl": "test",
                },
                "liveConfig": Object {
                  "viewerUrl": "test",
                },
                "panel": Object {
                  "viewerUrl": "test",
                },
              },
              "whitelistedConfigUrls": Array [
                "foo",
              ],
              "whitelistedPanelUrls": Array [
                "bar",
              ],
            },
            "frameId": "frameid-0",
            "mode": "viewer",
            "type": "panel",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="view__header"
>
            <div
                        className="view__descriptor"
            >
                        Logged-Out Viewer
            </div>
            <div
                        className="view__descriptor"
            />
</div>,
          false,
          false,
          <div
            className="view"
            style={
                        Object {
                                    "height": "150pxpx",
                                    "width": "320pxpx",
                                  }
            }
>
            <ExtensionFrame
                        className="view"
                        extension={
                                    Object {
                                                "authorName": "test",
                                                "channelId": "channelId",
                                                "description": "description",
                                                "iconUrl": "icon_url",
                                                "id": "id",
                                                "name": "name",
                                                "requestIdentity": false,
                                                "sku": "sku",
                                                "state": "state",
                                                "summary": "summary",
                                                "token": "token",
                                                "vendorCode": "vendorCode",
                                                "version": "0.1",
                                                "views": Object {
                                                  "component": Object {
                                                    "aspectHeight": 3000,
                                                    "aspectWidth": 2500,
                                                    "viewerUrl": "test",
                                                    "zoom": false,
                                                  },
                                                  "config": Object {
                                                    "viewerUrl": "test",
                                                  },
                                                  "liveConfig": Object {
                                                    "viewerUrl": "test",
                                                  },
                                                  "panel": Object {
                                                    "viewerUrl": "test",
                                                  },
                                                },
                                                "whitelistedConfigUrls": Array [
                                                  "foo",
                                                ],
                                                "whitelistedPanelUrls": Array [
                                                  "bar",
                                                ],
                                              }
                        }
                        frameId="frameid-0"
                        mode="viewer"
                        type="panel"
            />
</div>,
        ],
        "className": "view__wrapper",
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "style": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <div
                className="view__descriptor"
>
                Logged-Out Viewer
</div>,
              <div
                className="view__descriptor"
/>,
            ],
            "className": "view__header",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Logged-Out Viewer",
                "className": "view__descriptor",
              },
              "ref": null,
              "rendered": "Logged-Out Viewer",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "view__descriptor",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
          ],
          "type": "div",
        },
        false,
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ExtensionFrame
              className="view"
              extension={
                            Object {
                                          "authorName": "test",
                                          "channelId": "channelId",
                                          "description": "description",
                                          "iconUrl": "icon_url",
                                          "id": "id",
                                          "name": "name",
                                          "requestIdentity": false,
                                          "sku": "sku",
                                          "state": "state",
                                          "summary": "summary",
                                          "token": "token",
                                          "vendorCode": "vendorCode",
                                          "version": "0.1",
                                          "views": Object {
                                            "component": Object {
                                              "aspectHeight": 3000,
                                              "aspectWidth": 2500,
                                              "viewerUrl": "test",
                                              "zoom": false,
                                            },
                                            "config": Object {
                                              "viewerUrl": "test",
                                            },
                                            "liveConfig": Object {
                                              "viewerUrl": "test",
                                            },
                                            "panel": Object {
                                              "viewerUrl": "test",
                                            },
                                          },
                                          "whitelistedConfigUrls": Array [
                                            "foo",
                                          ],
                                          "whitelistedPanelUrls": Array [
                                            "bar",
                                          ],
                                        }
              }
              frameId="frameid-0"
              mode="viewer"
              type="panel"
/>,
            "className": "view",
            "style": Object {
              "height": "150pxpx",
              "width": "320pxpx",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "view",
              "extension": Object {
                "authorName": "test",
                "channelId": "channelId",
                "description": "description",
                "iconUrl": "icon_url",
                "id": "id",
                "name": "name",
                "requestIdentity": false,
                "sku": "sku",
                "state": "state",
                "summary": "summary",
                "token": "token",
                "vendorCode": "vendorCode",
                "version": "0.1",
                "views": Object {
                  "component": Object {
                    "aspectHeight": 3000,
                    "aspectWidth": 2500,
                    "viewerUrl": "test",
                    "zoom": false,
                  },
                  "config": Object {
                    "viewerUrl": "test",
                  },
                  "liveConfig": Object {
                    "viewerUrl": "test",
                  },
                  "panel": Object {
                    "viewerUrl": "test",
                  },
                },
                "whitelistedConfigUrls": Array [
                  "foo",
                ],
                "whitelistedPanelUrls": Array [
                  "bar",
                ],
              },
              "frameId": "frameid-0",
              "mode": "viewer",
              "type": "panel",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionView /> panel mode views sets correct panel height when panel height provided 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionView
    deleteViewHandler={[Function]}
    extension={
        Object {
            "authorName": "test",
            "channelId": "channelId",
            "description": "description",
            "iconUrl": "icon_url",
            "id": "id",
            "name": "name",
            "requestIdentity": false,
            "sku": "sku",
            "state": "state",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "config": Object {
                "viewerUrl": "test",
              },
              "liveConfig": Object {
                "viewerUrl": "test",
              },
              "panel": Object {
                "height": "300px",
                "viewerUrl": "test",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameSize={
        Object {
            "height": 0,
            "width": 0,
          }
    }
    id="0"
    linked={false}
    mode="viewer"
    openEditViewHandler={[Function]}
    position={
        Object {
            "x": 0,
            "y": 0,
          }
    }
    role="Broadcaster"
    type="panel"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="view__header"
>
          <div
                    className="view__descriptor"
          >
                    Broadcaster
          </div>
          <div
                    className="view__descriptor"
          />
</div>,
        false,
        false,
        <div
          className="view"
          style={
                    Object {
                              "height": "300pxpx",
                              "width": "320pxpx",
                            }
          }
>
          <ExtensionFrame
                    className="view"
                    extension={
                              Object {
                                        "authorName": "test",
                                        "channelId": "channelId",
                                        "description": "description",
                                        "iconUrl": "icon_url",
                                        "id": "id",
                                        "name": "name",
                                        "requestIdentity": false,
                                        "sku": "sku",
                                        "state": "state",
                                        "summary": "summary",
                                        "token": "token",
                                        "vendorCode": "vendorCode",
                                        "version": "0.1",
                                        "views": Object {
                                          "config": Object {
                                            "viewerUrl": "test",
                                          },
                                          "liveConfig": Object {
                                            "viewerUrl": "test",
                                          },
                                          "panel": Object {
                                            "height": "300px",
                                            "viewerUrl": "test",
                                          },
                                        },
                                        "whitelistedConfigUrls": Array [
                                          "foo",
                                        ],
                                        "whitelistedPanelUrls": Array [
                                          "bar",
                                        ],
                                      }
                    }
                    frameId="frameid-0"
                    mode="viewer"
                    type="panel"
          />
</div>,
      ],
      "className": "view__wrapper",
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "style": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            <div
              className="view__descriptor"
>
              Broadcaster
</div>,
            <div
              className="view__descriptor"
/>,
          ],
          "className": "view__header",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Broadcaster",
              "className": "view__descriptor",
            },
            "ref": null,
            "rendered": "Broadcaster",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "view__descriptor",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": "div",
      },
      false,
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ExtensionFrame
            className="view"
            extension={
                        Object {
                                    "authorName": "test",
                                    "channelId": "channelId",
                                    "description": "description",
                                    "iconUrl": "icon_url",
                                    "id": "id",
                                    "name": "name",
                                    "requestIdentity": false,
                                    "sku": "sku",
                                    "state": "state",
                                    "summary": "summary",
                                    "token": "token",
                                    "vendorCode": "vendorCode",
                                    "version": "0.1",
                                    "views": Object {
                                      "config": Object {
                                        "viewerUrl": "test",
                                      },
                                      "liveConfig": Object {
                                        "viewerUrl": "test",
                                      },
                                      "panel": Object {
                                        "height": "300px",
                                        "viewerUrl": "test",
                                      },
                                    },
                                    "whitelistedConfigUrls": Array [
                                      "foo",
                                    ],
                                    "whitelistedPanelUrls": Array [
                                      "bar",
                                    ],
                                  }
            }
            frameId="frameid-0"
            mode="viewer"
            type="panel"
/>,
          "className": "view",
          "style": Object {
            "height": "300pxpx",
            "width": "320pxpx",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "view",
            "extension": Object {
              "authorName": "test",
              "channelId": "channelId",
              "description": "description",
              "iconUrl": "icon_url",
              "id": "id",
              "name": "name",
              "requestIdentity": false,
              "sku": "sku",
              "state": "state",
              "summary": "summary",
              "token": "token",
              "vendorCode": "vendorCode",
              "version": "0.1",
              "views": Object {
                "config": Object {
                  "viewerUrl": "test",
                },
                "liveConfig": Object {
                  "viewerUrl": "test",
                },
                "panel": Object {
                  "height": "300px",
                  "viewerUrl": "test",
                },
              },
              "whitelistedConfigUrls": Array [
                "foo",
              ],
              "whitelistedPanelUrls": Array [
                "bar",
              ],
            },
            "frameId": "frameid-0",
            "mode": "viewer",
            "type": "panel",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="view__header"
>
            <div
                        className="view__descriptor"
            >
                        Broadcaster
            </div>
            <div
                        className="view__descriptor"
            />
</div>,
          false,
          false,
          <div
            className="view"
            style={
                        Object {
                                    "height": "300pxpx",
                                    "width": "320pxpx",
                                  }
            }
>
            <ExtensionFrame
                        className="view"
                        extension={
                                    Object {
                                                "authorName": "test",
                                                "channelId": "channelId",
                                                "description": "description",
                                                "iconUrl": "icon_url",
                                                "id": "id",
                                                "name": "name",
                                                "requestIdentity": false,
                                                "sku": "sku",
                                                "state": "state",
                                                "summary": "summary",
                                                "token": "token",
                                                "vendorCode": "vendorCode",
                                                "version": "0.1",
                                                "views": Object {
                                                  "config": Object {
                                                    "viewerUrl": "test",
                                                  },
                                                  "liveConfig": Object {
                                                    "viewerUrl": "test",
                                                  },
                                                  "panel": Object {
                                                    "height": "300px",
                                                    "viewerUrl": "test",
                                                  },
                                                },
                                                "whitelistedConfigUrls": Array [
                                                  "foo",
                                                ],
                                                "whitelistedPanelUrls": Array [
                                                  "bar",
                                                ],
                                              }
                        }
                        frameId="frameid-0"
                        mode="viewer"
                        type="panel"
            />
</div>,
        ],
        "className": "view__wrapper",
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "style": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <div
                className="view__descriptor"
>
                Broadcaster
</div>,
              <div
                className="view__descriptor"
/>,
            ],
            "className": "view__header",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Broadcaster",
                "className": "view__descriptor",
              },
              "ref": null,
              "rendered": "Broadcaster",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "view__descriptor",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
          ],
          "type": "div",
        },
        false,
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ExtensionFrame
              className="view"
              extension={
                            Object {
                                          "authorName": "test",
                                          "channelId": "channelId",
                                          "description": "description",
                                          "iconUrl": "icon_url",
                                          "id": "id",
                                          "name": "name",
                                          "requestIdentity": false,
                                          "sku": "sku",
                                          "state": "state",
                                          "summary": "summary",
                                          "token": "token",
                                          "vendorCode": "vendorCode",
                                          "version": "0.1",
                                          "views": Object {
                                            "config": Object {
                                              "viewerUrl": "test",
                                            },
                                            "liveConfig": Object {
                                              "viewerUrl": "test",
                                            },
                                            "panel": Object {
                                              "height": "300px",
                                              "viewerUrl": "test",
                                            },
                                          },
                                          "whitelistedConfigUrls": Array [
                                            "foo",
                                          ],
                                          "whitelistedPanelUrls": Array [
                                            "bar",
                                          ],
                                        }
              }
              frameId="frameid-0"
              mode="viewer"
              type="panel"
/>,
            "className": "view",
            "style": Object {
              "height": "300pxpx",
              "width": "320pxpx",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "view",
              "extension": Object {
                "authorName": "test",
                "channelId": "channelId",
                "description": "description",
                "iconUrl": "icon_url",
                "id": "id",
                "name": "name",
                "requestIdentity": false,
                "sku": "sku",
                "state": "state",
                "summary": "summary",
                "token": "token",
                "vendorCode": "vendorCode",
                "version": "0.1",
                "views": Object {
                  "config": Object {
                    "viewerUrl": "test",
                  },
                  "liveConfig": Object {
                    "viewerUrl": "test",
                  },
                  "panel": Object {
                    "height": "300px",
                    "viewerUrl": "test",
                  },
                },
                "whitelistedConfigUrls": Array [
                  "foo",
                ],
                "whitelistedPanelUrls": Array [
                  "bar",
                ],
              },
              "frameId": "frameid-0",
              "mode": "viewer",
              "type": "panel",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ExtensionView /> uses correct panel view styles if no type provided 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExtensionView
    deleteViewHandler={[Function]}
    extension={
        Object {
            "authorName": "test",
            "channelId": "channelId",
            "description": "description",
            "iconUrl": "icon_url",
            "id": "id",
            "name": "name",
            "requestIdentity": false,
            "sku": "sku",
            "state": "state",
            "summary": "summary",
            "token": "token",
            "vendorCode": "vendorCode",
            "version": "0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "viewerUrl": "test",
                "zoom": false,
              },
              "config": Object {
                "viewerUrl": "test",
              },
              "liveConfig": Object {
                "viewerUrl": "test",
              },
              "panel": Object {
                "viewerUrl": "test",
              },
            },
            "whitelistedConfigUrls": Array [
              "foo",
            ],
            "whitelistedPanelUrls": Array [
              "bar",
            ],
          }
    }
    frameSize={
        Object {
            "height": 0,
            "width": 0,
          }
    }
    id="0"
    linked={false}
    mode="viewer"
    openEditViewHandler={[Function]}
    position={
        Object {
            "x": 0,
            "y": 0,
          }
    }
    role="Broadcaster"
    type=""
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="view__header"
>
          <div
                    className="view__descriptor"
          >
                    Broadcaster
          </div>
          <div
                    className="view__descriptor"
          />
</div>,
        false,
        false,
        false,
      ],
      "className": "view__wrapper",
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "style": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            <div
              className="view__descriptor"
>
              Broadcaster
</div>,
            <div
              className="view__descriptor"
/>,
          ],
          "className": "view__header",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Broadcaster",
              "className": "view__descriptor",
            },
            "ref": null,
            "rendered": "Broadcaster",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "view__descriptor",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": "div",
      },
      false,
      false,
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="view__header"
>
            <div
                        className="view__descriptor"
            >
                        Broadcaster
            </div>
            <div
                        className="view__descriptor"
            />
</div>,
          false,
          false,
          false,
        ],
        "className": "view__wrapper",
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "style": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <div
                className="view__descriptor"
>
                Broadcaster
</div>,
              <div
                className="view__descriptor"
/>,
            ],
            "className": "view__header",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Broadcaster",
                "className": "view__descriptor",
              },
              "ref": null,
              "rendered": "Broadcaster",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "view__descriptor",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
          ],
          "type": "div",
        },
        false,
        false,
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
